spring.application.name=kafka

# kakfa config
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: group-id
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.consumer.properties.spring.json.type.mapping=user:com.example.kafka.domain.User <- what is this for?
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
# spring.kafka.producer.properties.spring.json.type.mapping=user:com.example.kafka.domain.User <- are these needed?



# server: port: 9000
# spring:
#    kafka:
#      consumer:
#         bootstrap-servers: localhost:9092
#         group-id: group_id
#         auto-offset-reset: earliest
#         key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#         value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        
#      producer:
#         bootstrap-servers: localhost:9092
#         key-serializer: org.apache.kafka.common.serialization.StringSerializer
#         value-serializer: org.springframework.kafka.support.serializer.JsonSerializer